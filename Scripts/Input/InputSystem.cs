//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Input/InputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputSystem: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystem"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""e9b589d1-a5cc-4ba8-9251-63e9f8332707"",
            ""actions"": [
                {
                    ""name"": ""SwitchControlState"",
                    ""type"": ""Button"",
                    ""id"": ""8aa0126f-bb95-482f-b0b0-96315ee6c072"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomIn"",
                    ""type"": ""Value"",
                    ""id"": ""1dee4c8e-9e61-476d-9900-9dae4036e9e0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZoomOut"",
                    ""type"": ""Value"",
                    ""id"": ""13c0b36b-db91-404f-9717-dcd0e5a4234e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCameraWithPlayer"",
                    ""type"": ""Button"",
                    ""id"": ""9a31156e-db94-487b-9fea-3e1e88cc827c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""50febe85-c71c-4f6d-b15d-252f55750782"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchControlState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""847ac409-3391-40c7-bc06-e24b58a66561"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchControlState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd35ca22-2737-4b72-8e1a-f8722d91c62a"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""ZoomIn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a518f90-0c3d-4c94-b363-602803be068d"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""ZoomIn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d014f1d-fe42-42d2-a3c9-c0cb3a917d5e"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0173bcf5-d732-4413-80d0-ff6716fdaee2"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb777133-b2da-4e75-8156-b03e631ee6fc"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCameraWithPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player"",
            ""id"": ""597606c8-3d4b-42b2-bda1-5b323bb426d0"",
            ""actions"": [
                {
                    ""name"": ""PlayerMove"",
                    ""type"": ""Value"",
                    ""id"": ""46d3b28f-5056-41e5-a1cf-401f0b9f8f27"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlayerSprint"",
                    ""type"": ""Button"",
                    ""id"": ""a4a54349-275f-40c8-a9c2-277df1fafe09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerJump"",
                    ""type"": ""Button"",
                    ""id"": ""7f5802cc-2cf8-4f2e-b889-1fa888d587dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerCrouch"",
                    ""type"": ""Button"",
                    ""id"": ""3d2226d7-29b4-4da8-b13b-876fb8eccc62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerInteract"",
                    ""type"": ""Button"",
                    ""id"": ""ad7d73ad-0f15-4593-9161-4383182cb274"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerInventoryOverlay"",
                    ""type"": ""Button"",
                    ""id"": ""f1d370a2-bd6f-4e67-9dbb-03c8a544ccf0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerObjectiveOverlay"",
                    ""type"": ""Button"",
                    ""id"": ""d4369218-3c36-46e3-98ce-4db59f7bdeef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerBuildOverlayCycleRight"",
                    ""type"": ""Button"",
                    ""id"": ""4986fc4a-cac2-4f08-8642-571836ab8d1c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerBuildOverlayCycleLeft"",
                    ""type"": ""Button"",
                    ""id"": ""62984d7d-ce48-46da-a946-91d1beef0833"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerBuildOverlay"",
                    ""type"": ""Button"",
                    ""id"": ""e4df92d7-b739-41dd-afa3-675ac9711219"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerFlashlight"",
                    ""type"": ""Button"",
                    ""id"": ""726076e3-619b-4f78-b943-793c696127b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerPickupRobot"",
                    ""type"": ""Button"",
                    ""id"": ""911b8d42-dbd9-47bd-9948-db5976a40b13"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""122f1c76-507c-4605-89c1-9c34aedf3964"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""3b670b53-cf28-4e2d-ac5b-e285879c2c21"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""2097c163-399f-4647-98b7-a19d08a6504b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""19220c30-f8cd-438a-ba39-a0e85d7475ae"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""7045ceda-1ce4-426f-afe1-0cd84dc8bf2d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""e29fd7b8-7150-458b-9f37-546dd6bf24f5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""5c28bf20-ab3f-42aa-84f1-bbbad7548565"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""d826a941-87a8-4c57-872c-f23918bc1e79"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""d89bef07-f936-415e-928d-903d0dd6348e"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""8cbf4d31-5336-41b5-82ec-c21b473326c9"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6c1e19ce-d25d-4804-89df-725019d3e4ca"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2261c05a-a5e0-46d4-855e-d6bd182e152e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b457a86-3db8-4db6-9a4a-2f018609ad86"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerCrouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b422ee0-876a-4274-b39d-456e2d8253e0"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerCrouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9cf730f-63cd-4b42-921e-85ec771e62ab"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4b9da6d-e3a9-43f0-af9e-8b6409b6f204"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a383c7c-db93-40f5-b0ce-ca58344ee043"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerObjectiveOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""331159ca-187e-4494-8936-9f1b65faada7"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerObjectiveOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0955537e-91ca-4807-9fff-fc1c2744add6"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerInventoryOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9e9d714-f71a-4c9f-a639-50a69de66280"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerInventoryOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""523a3a40-d99a-43c5-acfd-fb2efbaaf235"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerSprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f0dad0f-7ee8-4fb6-98e1-cd6c28e7f4ea"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerSprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""760c33e2-df3c-4007-8aaa-03d7943e52ea"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerBuildOverlayCycleRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b09e7838-db99-4326-8513-c0ec25ac6e51"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerBuildOverlayCycleLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7a9542c-c15f-4c60-83c6-f0dea80f56b9"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerBuildOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5208440e-dad7-45a4-be90-871b5b1988ae"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerBuildOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""541ae8dd-02ea-4a33-a6cc-7c8a39061dfa"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerFlashlight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f18c9b30-6339-41e5-ad86-7222d4caac1b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerPickupRobot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Satellite"",
            ""id"": ""0eda7410-4158-4a3b-a247-ef641bf86758"",
            ""actions"": [
                {
                    ""name"": ""SatelliteMove"",
                    ""type"": ""Value"",
                    ""id"": ""90e5e924-7ba2-49a3-b5a4-791a82a70f0f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SatelliteScan"",
                    ""type"": ""Button"",
                    ""id"": ""9a4176a6-907b-411d-80e1-cfa8891b6d42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SatelliteControlToggle"",
                    ""type"": ""Button"",
                    ""id"": ""3956e523-32cd-40d3-9a06-c5e67e983d15"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""3835830a-fbd1-4fca-a350-e397f35c000b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bad57f91-3f70-45a4-b4e0-3a8d9e707a01"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ed5462e6-e5c3-4908-9284-6da72d66dec2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""dbd730b5-0cb1-475d-8ad2-b6bb0ed47bf4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""376ac0ca-6a77-4fa3-8364-add4134f5a79"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d3708ec7-d767-4083-835f-6d3e10470478"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4086f531-25ee-46bd-b5d1-767160acdbf3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteScan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0126c97f-7115-4fc4-8e5d-42356ec3db14"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteScan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1213ab66-f99c-445b-b0c7-4e447fda231c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteControlToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Cave Scene"",
            ""id"": ""f89fc0bf-31ae-4cf1-989f-73905dfb2990"",
            ""actions"": [],
            ""bindings"": []
        },
        {
            ""name"": ""Asteroid Scene"",
            ""id"": ""795878a4-992b-4534-8f1d-4712f906135a"",
            ""actions"": [
                {
                    ""name"": ""ZoomIn"",
                    ""type"": ""Value"",
                    ""id"": ""a9c81524-658f-4067-a843-46832b2f08af"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZoomOut"",
                    ""type"": ""Value"",
                    ""id"": ""88c4526c-7d51-4ae1-a82c-8d243c2dc56e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1d9285a2-db77-4436-b96b-2cf39c0b0486"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""ZoomIn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""106c07ce-1df9-4af8-93ed-714afbcfa148"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""ZoomIn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ccf33f64-0f1c-4b77-9a1a-c142d8f720f2"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b94766eb-d09b-450c-9ac7-0d66ff34fd28"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Generic Scene"",
            ""id"": ""8d170e31-5512-422d-a62a-e7038eb6f1d6"",
            ""actions"": [
                {
                    ""name"": ""SwitchControlState"",
                    ""type"": ""Button"",
                    ""id"": ""3c339574-b945-435e-8f91-3c27475f370a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GamePause"",
                    ""type"": ""Button"",
                    ""id"": ""f85a4076-ccdd-479d-96e5-21ca3cd2ff51"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8bad45f6-9598-44ed-ad49-b2e29487634b"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchControlState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4569529e-1a88-47f4-af2c-72078d1a4c2f"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchControlState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7994baf4-c5e6-44f9-a999-d27058792e3e"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GamePause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8b49424-67c2-4a49-aba2-ed9344da71c1"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GamePause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""RobotBuddy"",
            ""id"": ""730e9276-14c7-42d4-8684-ddef97b83142"",
            ""actions"": [
                {
                    ""name"": ""RobotBuddyMove"",
                    ""type"": ""Value"",
                    ""id"": ""5881b792-9b59-4890-b323-b41c5e2ccd00"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RobotJump"",
                    ""type"": ""Button"",
                    ""id"": ""d78a56af-8d08-40a8-aff3-d9997f0e7078"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RobotBuddyInteract"",
                    ""type"": ""Button"",
                    ""id"": ""4c71db63-ede5-4e52-bdd8-2362757b2842"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""8c3f07ba-3459-480e-8108-0406526dda49"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RobotBuddyMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3fffde9c-0eec-4f16-b84f-dc4390d8d7c6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RobotBuddyMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""91f1acb9-14da-4096-a25c-11c9ca7326fc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RobotBuddyMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""544ed058-a7cf-43cc-ad89-01cdb0670aed"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RobotBuddyMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cdaa14ba-2010-4b10-814c-204f4ae1aa8a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RobotBuddyMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b52c7b4e-de3b-485c-96e2-941c26a51a7b"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RobotBuddyMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""742e387d-13fe-43d7-8374-aaa2a1e16cd8"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RobotBuddyInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1bfb85e-75cd-42ad-a8b6-111971cee5b4"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RobotBuddyInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""244a9f20-6635-4e29-a8ad-5fcda6c24367"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RobotJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c5ea2ad-c2a4-434b-b74d-84e77b7ffe30"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RobotJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_SwitchControlState = m_Gameplay.FindAction("SwitchControlState", throwIfNotFound: true);
        m_Gameplay_ZoomIn = m_Gameplay.FindAction("ZoomIn", throwIfNotFound: true);
        m_Gameplay_ZoomOut = m_Gameplay.FindAction("ZoomOut", throwIfNotFound: true);
        m_Gameplay_RotateCameraWithPlayer = m_Gameplay.FindAction("RotateCameraWithPlayer", throwIfNotFound: true);
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_PlayerMove = m_Player.FindAction("PlayerMove", throwIfNotFound: true);
        m_Player_PlayerSprint = m_Player.FindAction("PlayerSprint", throwIfNotFound: true);
        m_Player_PlayerJump = m_Player.FindAction("PlayerJump", throwIfNotFound: true);
        m_Player_PlayerCrouch = m_Player.FindAction("PlayerCrouch", throwIfNotFound: true);
        m_Player_PlayerInteract = m_Player.FindAction("PlayerInteract", throwIfNotFound: true);
        m_Player_PlayerInventoryOverlay = m_Player.FindAction("PlayerInventoryOverlay", throwIfNotFound: true);
        m_Player_PlayerObjectiveOverlay = m_Player.FindAction("PlayerObjectiveOverlay", throwIfNotFound: true);
        m_Player_PlayerBuildOverlayCycleRight = m_Player.FindAction("PlayerBuildOverlayCycleRight", throwIfNotFound: true);
        m_Player_PlayerBuildOverlayCycleLeft = m_Player.FindAction("PlayerBuildOverlayCycleLeft", throwIfNotFound: true);
        m_Player_PlayerBuildOverlay = m_Player.FindAction("PlayerBuildOverlay", throwIfNotFound: true);
        m_Player_PlayerFlashlight = m_Player.FindAction("PlayerFlashlight", throwIfNotFound: true);
        m_Player_PlayerPickupRobot = m_Player.FindAction("PlayerPickupRobot", throwIfNotFound: true);
        // Satellite
        m_Satellite = asset.FindActionMap("Satellite", throwIfNotFound: true);
        m_Satellite_SatelliteMove = m_Satellite.FindAction("SatelliteMove", throwIfNotFound: true);
        m_Satellite_SatelliteScan = m_Satellite.FindAction("SatelliteScan", throwIfNotFound: true);
        m_Satellite_SatelliteControlToggle = m_Satellite.FindAction("SatelliteControlToggle", throwIfNotFound: true);
        // Cave Scene
        m_CaveScene = asset.FindActionMap("Cave Scene", throwIfNotFound: true);
        // Asteroid Scene
        m_AsteroidScene = asset.FindActionMap("Asteroid Scene", throwIfNotFound: true);
        m_AsteroidScene_ZoomIn = m_AsteroidScene.FindAction("ZoomIn", throwIfNotFound: true);
        m_AsteroidScene_ZoomOut = m_AsteroidScene.FindAction("ZoomOut", throwIfNotFound: true);
        // Generic Scene
        m_GenericScene = asset.FindActionMap("Generic Scene", throwIfNotFound: true);
        m_GenericScene_SwitchControlState = m_GenericScene.FindAction("SwitchControlState", throwIfNotFound: true);
        m_GenericScene_GamePause = m_GenericScene.FindAction("GamePause", throwIfNotFound: true);
        // RobotBuddy
        m_RobotBuddy = asset.FindActionMap("RobotBuddy", throwIfNotFound: true);
        m_RobotBuddy_RobotBuddyMove = m_RobotBuddy.FindAction("RobotBuddyMove", throwIfNotFound: true);
        m_RobotBuddy_RobotJump = m_RobotBuddy.FindAction("RobotJump", throwIfNotFound: true);
        m_RobotBuddy_RobotBuddyInteract = m_RobotBuddy.FindAction("RobotBuddyInteract", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_SwitchControlState;
    private readonly InputAction m_Gameplay_ZoomIn;
    private readonly InputAction m_Gameplay_ZoomOut;
    private readonly InputAction m_Gameplay_RotateCameraWithPlayer;
    public struct GameplayActions
    {
        private @InputSystem m_Wrapper;
        public GameplayActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @SwitchControlState => m_Wrapper.m_Gameplay_SwitchControlState;
        public InputAction @ZoomIn => m_Wrapper.m_Gameplay_ZoomIn;
        public InputAction @ZoomOut => m_Wrapper.m_Gameplay_ZoomOut;
        public InputAction @RotateCameraWithPlayer => m_Wrapper.m_Gameplay_RotateCameraWithPlayer;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @SwitchControlState.started += instance.OnSwitchControlState;
            @SwitchControlState.performed += instance.OnSwitchControlState;
            @SwitchControlState.canceled += instance.OnSwitchControlState;
            @ZoomIn.started += instance.OnZoomIn;
            @ZoomIn.performed += instance.OnZoomIn;
            @ZoomIn.canceled += instance.OnZoomIn;
            @ZoomOut.started += instance.OnZoomOut;
            @ZoomOut.performed += instance.OnZoomOut;
            @ZoomOut.canceled += instance.OnZoomOut;
            @RotateCameraWithPlayer.started += instance.OnRotateCameraWithPlayer;
            @RotateCameraWithPlayer.performed += instance.OnRotateCameraWithPlayer;
            @RotateCameraWithPlayer.canceled += instance.OnRotateCameraWithPlayer;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @SwitchControlState.started -= instance.OnSwitchControlState;
            @SwitchControlState.performed -= instance.OnSwitchControlState;
            @SwitchControlState.canceled -= instance.OnSwitchControlState;
            @ZoomIn.started -= instance.OnZoomIn;
            @ZoomIn.performed -= instance.OnZoomIn;
            @ZoomIn.canceled -= instance.OnZoomIn;
            @ZoomOut.started -= instance.OnZoomOut;
            @ZoomOut.performed -= instance.OnZoomOut;
            @ZoomOut.canceled -= instance.OnZoomOut;
            @RotateCameraWithPlayer.started -= instance.OnRotateCameraWithPlayer;
            @RotateCameraWithPlayer.performed -= instance.OnRotateCameraWithPlayer;
            @RotateCameraWithPlayer.canceled -= instance.OnRotateCameraWithPlayer;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_PlayerMove;
    private readonly InputAction m_Player_PlayerSprint;
    private readonly InputAction m_Player_PlayerJump;
    private readonly InputAction m_Player_PlayerCrouch;
    private readonly InputAction m_Player_PlayerInteract;
    private readonly InputAction m_Player_PlayerInventoryOverlay;
    private readonly InputAction m_Player_PlayerObjectiveOverlay;
    private readonly InputAction m_Player_PlayerBuildOverlayCycleRight;
    private readonly InputAction m_Player_PlayerBuildOverlayCycleLeft;
    private readonly InputAction m_Player_PlayerBuildOverlay;
    private readonly InputAction m_Player_PlayerFlashlight;
    private readonly InputAction m_Player_PlayerPickupRobot;
    public struct PlayerActions
    {
        private @InputSystem m_Wrapper;
        public PlayerActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerMove => m_Wrapper.m_Player_PlayerMove;
        public InputAction @PlayerSprint => m_Wrapper.m_Player_PlayerSprint;
        public InputAction @PlayerJump => m_Wrapper.m_Player_PlayerJump;
        public InputAction @PlayerCrouch => m_Wrapper.m_Player_PlayerCrouch;
        public InputAction @PlayerInteract => m_Wrapper.m_Player_PlayerInteract;
        public InputAction @PlayerInventoryOverlay => m_Wrapper.m_Player_PlayerInventoryOverlay;
        public InputAction @PlayerObjectiveOverlay => m_Wrapper.m_Player_PlayerObjectiveOverlay;
        public InputAction @PlayerBuildOverlayCycleRight => m_Wrapper.m_Player_PlayerBuildOverlayCycleRight;
        public InputAction @PlayerBuildOverlayCycleLeft => m_Wrapper.m_Player_PlayerBuildOverlayCycleLeft;
        public InputAction @PlayerBuildOverlay => m_Wrapper.m_Player_PlayerBuildOverlay;
        public InputAction @PlayerFlashlight => m_Wrapper.m_Player_PlayerFlashlight;
        public InputAction @PlayerPickupRobot => m_Wrapper.m_Player_PlayerPickupRobot;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @PlayerMove.started += instance.OnPlayerMove;
            @PlayerMove.performed += instance.OnPlayerMove;
            @PlayerMove.canceled += instance.OnPlayerMove;
            @PlayerSprint.started += instance.OnPlayerSprint;
            @PlayerSprint.performed += instance.OnPlayerSprint;
            @PlayerSprint.canceled += instance.OnPlayerSprint;
            @PlayerJump.started += instance.OnPlayerJump;
            @PlayerJump.performed += instance.OnPlayerJump;
            @PlayerJump.canceled += instance.OnPlayerJump;
            @PlayerCrouch.started += instance.OnPlayerCrouch;
            @PlayerCrouch.performed += instance.OnPlayerCrouch;
            @PlayerCrouch.canceled += instance.OnPlayerCrouch;
            @PlayerInteract.started += instance.OnPlayerInteract;
            @PlayerInteract.performed += instance.OnPlayerInteract;
            @PlayerInteract.canceled += instance.OnPlayerInteract;
            @PlayerInventoryOverlay.started += instance.OnPlayerInventoryOverlay;
            @PlayerInventoryOverlay.performed += instance.OnPlayerInventoryOverlay;
            @PlayerInventoryOverlay.canceled += instance.OnPlayerInventoryOverlay;
            @PlayerObjectiveOverlay.started += instance.OnPlayerObjectiveOverlay;
            @PlayerObjectiveOverlay.performed += instance.OnPlayerObjectiveOverlay;
            @PlayerObjectiveOverlay.canceled += instance.OnPlayerObjectiveOverlay;
            @PlayerBuildOverlayCycleRight.started += instance.OnPlayerBuildOverlayCycleRight;
            @PlayerBuildOverlayCycleRight.performed += instance.OnPlayerBuildOverlayCycleRight;
            @PlayerBuildOverlayCycleRight.canceled += instance.OnPlayerBuildOverlayCycleRight;
            @PlayerBuildOverlayCycleLeft.started += instance.OnPlayerBuildOverlayCycleLeft;
            @PlayerBuildOverlayCycleLeft.performed += instance.OnPlayerBuildOverlayCycleLeft;
            @PlayerBuildOverlayCycleLeft.canceled += instance.OnPlayerBuildOverlayCycleLeft;
            @PlayerBuildOverlay.started += instance.OnPlayerBuildOverlay;
            @PlayerBuildOverlay.performed += instance.OnPlayerBuildOverlay;
            @PlayerBuildOverlay.canceled += instance.OnPlayerBuildOverlay;
            @PlayerFlashlight.started += instance.OnPlayerFlashlight;
            @PlayerFlashlight.performed += instance.OnPlayerFlashlight;
            @PlayerFlashlight.canceled += instance.OnPlayerFlashlight;
            @PlayerPickupRobot.started += instance.OnPlayerPickupRobot;
            @PlayerPickupRobot.performed += instance.OnPlayerPickupRobot;
            @PlayerPickupRobot.canceled += instance.OnPlayerPickupRobot;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @PlayerMove.started -= instance.OnPlayerMove;
            @PlayerMove.performed -= instance.OnPlayerMove;
            @PlayerMove.canceled -= instance.OnPlayerMove;
            @PlayerSprint.started -= instance.OnPlayerSprint;
            @PlayerSprint.performed -= instance.OnPlayerSprint;
            @PlayerSprint.canceled -= instance.OnPlayerSprint;
            @PlayerJump.started -= instance.OnPlayerJump;
            @PlayerJump.performed -= instance.OnPlayerJump;
            @PlayerJump.canceled -= instance.OnPlayerJump;
            @PlayerCrouch.started -= instance.OnPlayerCrouch;
            @PlayerCrouch.performed -= instance.OnPlayerCrouch;
            @PlayerCrouch.canceled -= instance.OnPlayerCrouch;
            @PlayerInteract.started -= instance.OnPlayerInteract;
            @PlayerInteract.performed -= instance.OnPlayerInteract;
            @PlayerInteract.canceled -= instance.OnPlayerInteract;
            @PlayerInventoryOverlay.started -= instance.OnPlayerInventoryOverlay;
            @PlayerInventoryOverlay.performed -= instance.OnPlayerInventoryOverlay;
            @PlayerInventoryOverlay.canceled -= instance.OnPlayerInventoryOverlay;
            @PlayerObjectiveOverlay.started -= instance.OnPlayerObjectiveOverlay;
            @PlayerObjectiveOverlay.performed -= instance.OnPlayerObjectiveOverlay;
            @PlayerObjectiveOverlay.canceled -= instance.OnPlayerObjectiveOverlay;
            @PlayerBuildOverlayCycleRight.started -= instance.OnPlayerBuildOverlayCycleRight;
            @PlayerBuildOverlayCycleRight.performed -= instance.OnPlayerBuildOverlayCycleRight;
            @PlayerBuildOverlayCycleRight.canceled -= instance.OnPlayerBuildOverlayCycleRight;
            @PlayerBuildOverlayCycleLeft.started -= instance.OnPlayerBuildOverlayCycleLeft;
            @PlayerBuildOverlayCycleLeft.performed -= instance.OnPlayerBuildOverlayCycleLeft;
            @PlayerBuildOverlayCycleLeft.canceled -= instance.OnPlayerBuildOverlayCycleLeft;
            @PlayerBuildOverlay.started -= instance.OnPlayerBuildOverlay;
            @PlayerBuildOverlay.performed -= instance.OnPlayerBuildOverlay;
            @PlayerBuildOverlay.canceled -= instance.OnPlayerBuildOverlay;
            @PlayerFlashlight.started -= instance.OnPlayerFlashlight;
            @PlayerFlashlight.performed -= instance.OnPlayerFlashlight;
            @PlayerFlashlight.canceled -= instance.OnPlayerFlashlight;
            @PlayerPickupRobot.started -= instance.OnPlayerPickupRobot;
            @PlayerPickupRobot.performed -= instance.OnPlayerPickupRobot;
            @PlayerPickupRobot.canceled -= instance.OnPlayerPickupRobot;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Satellite
    private readonly InputActionMap m_Satellite;
    private List<ISatelliteActions> m_SatelliteActionsCallbackInterfaces = new List<ISatelliteActions>();
    private readonly InputAction m_Satellite_SatelliteMove;
    private readonly InputAction m_Satellite_SatelliteScan;
    private readonly InputAction m_Satellite_SatelliteControlToggle;
    public struct SatelliteActions
    {
        private @InputSystem m_Wrapper;
        public SatelliteActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @SatelliteMove => m_Wrapper.m_Satellite_SatelliteMove;
        public InputAction @SatelliteScan => m_Wrapper.m_Satellite_SatelliteScan;
        public InputAction @SatelliteControlToggle => m_Wrapper.m_Satellite_SatelliteControlToggle;
        public InputActionMap Get() { return m_Wrapper.m_Satellite; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SatelliteActions set) { return set.Get(); }
        public void AddCallbacks(ISatelliteActions instance)
        {
            if (instance == null || m_Wrapper.m_SatelliteActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SatelliteActionsCallbackInterfaces.Add(instance);
            @SatelliteMove.started += instance.OnSatelliteMove;
            @SatelliteMove.performed += instance.OnSatelliteMove;
            @SatelliteMove.canceled += instance.OnSatelliteMove;
            @SatelliteScan.started += instance.OnSatelliteScan;
            @SatelliteScan.performed += instance.OnSatelliteScan;
            @SatelliteScan.canceled += instance.OnSatelliteScan;
            @SatelliteControlToggle.started += instance.OnSatelliteControlToggle;
            @SatelliteControlToggle.performed += instance.OnSatelliteControlToggle;
            @SatelliteControlToggle.canceled += instance.OnSatelliteControlToggle;
        }

        private void UnregisterCallbacks(ISatelliteActions instance)
        {
            @SatelliteMove.started -= instance.OnSatelliteMove;
            @SatelliteMove.performed -= instance.OnSatelliteMove;
            @SatelliteMove.canceled -= instance.OnSatelliteMove;
            @SatelliteScan.started -= instance.OnSatelliteScan;
            @SatelliteScan.performed -= instance.OnSatelliteScan;
            @SatelliteScan.canceled -= instance.OnSatelliteScan;
            @SatelliteControlToggle.started -= instance.OnSatelliteControlToggle;
            @SatelliteControlToggle.performed -= instance.OnSatelliteControlToggle;
            @SatelliteControlToggle.canceled -= instance.OnSatelliteControlToggle;
        }

        public void RemoveCallbacks(ISatelliteActions instance)
        {
            if (m_Wrapper.m_SatelliteActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISatelliteActions instance)
        {
            foreach (var item in m_Wrapper.m_SatelliteActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SatelliteActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SatelliteActions @Satellite => new SatelliteActions(this);

    // Cave Scene
    private readonly InputActionMap m_CaveScene;
    private List<ICaveSceneActions> m_CaveSceneActionsCallbackInterfaces = new List<ICaveSceneActions>();
    public struct CaveSceneActions
    {
        private @InputSystem m_Wrapper;
        public CaveSceneActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputActionMap Get() { return m_Wrapper.m_CaveScene; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CaveSceneActions set) { return set.Get(); }
        public void AddCallbacks(ICaveSceneActions instance)
        {
            if (instance == null || m_Wrapper.m_CaveSceneActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CaveSceneActionsCallbackInterfaces.Add(instance);
        }

        private void UnregisterCallbacks(ICaveSceneActions instance)
        {
        }

        public void RemoveCallbacks(ICaveSceneActions instance)
        {
            if (m_Wrapper.m_CaveSceneActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICaveSceneActions instance)
        {
            foreach (var item in m_Wrapper.m_CaveSceneActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CaveSceneActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CaveSceneActions @CaveScene => new CaveSceneActions(this);

    // Asteroid Scene
    private readonly InputActionMap m_AsteroidScene;
    private List<IAsteroidSceneActions> m_AsteroidSceneActionsCallbackInterfaces = new List<IAsteroidSceneActions>();
    private readonly InputAction m_AsteroidScene_ZoomIn;
    private readonly InputAction m_AsteroidScene_ZoomOut;
    public struct AsteroidSceneActions
    {
        private @InputSystem m_Wrapper;
        public AsteroidSceneActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @ZoomIn => m_Wrapper.m_AsteroidScene_ZoomIn;
        public InputAction @ZoomOut => m_Wrapper.m_AsteroidScene_ZoomOut;
        public InputActionMap Get() { return m_Wrapper.m_AsteroidScene; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AsteroidSceneActions set) { return set.Get(); }
        public void AddCallbacks(IAsteroidSceneActions instance)
        {
            if (instance == null || m_Wrapper.m_AsteroidSceneActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_AsteroidSceneActionsCallbackInterfaces.Add(instance);
            @ZoomIn.started += instance.OnZoomIn;
            @ZoomIn.performed += instance.OnZoomIn;
            @ZoomIn.canceled += instance.OnZoomIn;
            @ZoomOut.started += instance.OnZoomOut;
            @ZoomOut.performed += instance.OnZoomOut;
            @ZoomOut.canceled += instance.OnZoomOut;
        }

        private void UnregisterCallbacks(IAsteroidSceneActions instance)
        {
            @ZoomIn.started -= instance.OnZoomIn;
            @ZoomIn.performed -= instance.OnZoomIn;
            @ZoomIn.canceled -= instance.OnZoomIn;
            @ZoomOut.started -= instance.OnZoomOut;
            @ZoomOut.performed -= instance.OnZoomOut;
            @ZoomOut.canceled -= instance.OnZoomOut;
        }

        public void RemoveCallbacks(IAsteroidSceneActions instance)
        {
            if (m_Wrapper.m_AsteroidSceneActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IAsteroidSceneActions instance)
        {
            foreach (var item in m_Wrapper.m_AsteroidSceneActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_AsteroidSceneActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public AsteroidSceneActions @AsteroidScene => new AsteroidSceneActions(this);

    // Generic Scene
    private readonly InputActionMap m_GenericScene;
    private List<IGenericSceneActions> m_GenericSceneActionsCallbackInterfaces = new List<IGenericSceneActions>();
    private readonly InputAction m_GenericScene_SwitchControlState;
    private readonly InputAction m_GenericScene_GamePause;
    public struct GenericSceneActions
    {
        private @InputSystem m_Wrapper;
        public GenericSceneActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @SwitchControlState => m_Wrapper.m_GenericScene_SwitchControlState;
        public InputAction @GamePause => m_Wrapper.m_GenericScene_GamePause;
        public InputActionMap Get() { return m_Wrapper.m_GenericScene; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GenericSceneActions set) { return set.Get(); }
        public void AddCallbacks(IGenericSceneActions instance)
        {
            if (instance == null || m_Wrapper.m_GenericSceneActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GenericSceneActionsCallbackInterfaces.Add(instance);
            @SwitchControlState.started += instance.OnSwitchControlState;
            @SwitchControlState.performed += instance.OnSwitchControlState;
            @SwitchControlState.canceled += instance.OnSwitchControlState;
            @GamePause.started += instance.OnGamePause;
            @GamePause.performed += instance.OnGamePause;
            @GamePause.canceled += instance.OnGamePause;
        }

        private void UnregisterCallbacks(IGenericSceneActions instance)
        {
            @SwitchControlState.started -= instance.OnSwitchControlState;
            @SwitchControlState.performed -= instance.OnSwitchControlState;
            @SwitchControlState.canceled -= instance.OnSwitchControlState;
            @GamePause.started -= instance.OnGamePause;
            @GamePause.performed -= instance.OnGamePause;
            @GamePause.canceled -= instance.OnGamePause;
        }

        public void RemoveCallbacks(IGenericSceneActions instance)
        {
            if (m_Wrapper.m_GenericSceneActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGenericSceneActions instance)
        {
            foreach (var item in m_Wrapper.m_GenericSceneActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GenericSceneActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GenericSceneActions @GenericScene => new GenericSceneActions(this);

    // RobotBuddy
    private readonly InputActionMap m_RobotBuddy;
    private List<IRobotBuddyActions> m_RobotBuddyActionsCallbackInterfaces = new List<IRobotBuddyActions>();
    private readonly InputAction m_RobotBuddy_RobotBuddyMove;
    private readonly InputAction m_RobotBuddy_RobotJump;
    private readonly InputAction m_RobotBuddy_RobotBuddyInteract;
    public struct RobotBuddyActions
    {
        private @InputSystem m_Wrapper;
        public RobotBuddyActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @RobotBuddyMove => m_Wrapper.m_RobotBuddy_RobotBuddyMove;
        public InputAction @RobotJump => m_Wrapper.m_RobotBuddy_RobotJump;
        public InputAction @RobotBuddyInteract => m_Wrapper.m_RobotBuddy_RobotBuddyInteract;
        public InputActionMap Get() { return m_Wrapper.m_RobotBuddy; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RobotBuddyActions set) { return set.Get(); }
        public void AddCallbacks(IRobotBuddyActions instance)
        {
            if (instance == null || m_Wrapper.m_RobotBuddyActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RobotBuddyActionsCallbackInterfaces.Add(instance);
            @RobotBuddyMove.started += instance.OnRobotBuddyMove;
            @RobotBuddyMove.performed += instance.OnRobotBuddyMove;
            @RobotBuddyMove.canceled += instance.OnRobotBuddyMove;
            @RobotJump.started += instance.OnRobotJump;
            @RobotJump.performed += instance.OnRobotJump;
            @RobotJump.canceled += instance.OnRobotJump;
            @RobotBuddyInteract.started += instance.OnRobotBuddyInteract;
            @RobotBuddyInteract.performed += instance.OnRobotBuddyInteract;
            @RobotBuddyInteract.canceled += instance.OnRobotBuddyInteract;
        }

        private void UnregisterCallbacks(IRobotBuddyActions instance)
        {
            @RobotBuddyMove.started -= instance.OnRobotBuddyMove;
            @RobotBuddyMove.performed -= instance.OnRobotBuddyMove;
            @RobotBuddyMove.canceled -= instance.OnRobotBuddyMove;
            @RobotJump.started -= instance.OnRobotJump;
            @RobotJump.performed -= instance.OnRobotJump;
            @RobotJump.canceled -= instance.OnRobotJump;
            @RobotBuddyInteract.started -= instance.OnRobotBuddyInteract;
            @RobotBuddyInteract.performed -= instance.OnRobotBuddyInteract;
            @RobotBuddyInteract.canceled -= instance.OnRobotBuddyInteract;
        }

        public void RemoveCallbacks(IRobotBuddyActions instance)
        {
            if (m_Wrapper.m_RobotBuddyActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRobotBuddyActions instance)
        {
            foreach (var item in m_Wrapper.m_RobotBuddyActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RobotBuddyActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RobotBuddyActions @RobotBuddy => new RobotBuddyActions(this);
    public interface IGameplayActions
    {
        void OnSwitchControlState(InputAction.CallbackContext context);
        void OnZoomIn(InputAction.CallbackContext context);
        void OnZoomOut(InputAction.CallbackContext context);
        void OnRotateCameraWithPlayer(InputAction.CallbackContext context);
    }
    public interface IPlayerActions
    {
        void OnPlayerMove(InputAction.CallbackContext context);
        void OnPlayerSprint(InputAction.CallbackContext context);
        void OnPlayerJump(InputAction.CallbackContext context);
        void OnPlayerCrouch(InputAction.CallbackContext context);
        void OnPlayerInteract(InputAction.CallbackContext context);
        void OnPlayerInventoryOverlay(InputAction.CallbackContext context);
        void OnPlayerObjectiveOverlay(InputAction.CallbackContext context);
        void OnPlayerBuildOverlayCycleRight(InputAction.CallbackContext context);
        void OnPlayerBuildOverlayCycleLeft(InputAction.CallbackContext context);
        void OnPlayerBuildOverlay(InputAction.CallbackContext context);
        void OnPlayerFlashlight(InputAction.CallbackContext context);
        void OnPlayerPickupRobot(InputAction.CallbackContext context);
    }
    public interface ISatelliteActions
    {
        void OnSatelliteMove(InputAction.CallbackContext context);
        void OnSatelliteScan(InputAction.CallbackContext context);
        void OnSatelliteControlToggle(InputAction.CallbackContext context);
    }
    public interface ICaveSceneActions
    {
    }
    public interface IAsteroidSceneActions
    {
        void OnZoomIn(InputAction.CallbackContext context);
        void OnZoomOut(InputAction.CallbackContext context);
    }
    public interface IGenericSceneActions
    {
        void OnSwitchControlState(InputAction.CallbackContext context);
        void OnGamePause(InputAction.CallbackContext context);
    }
    public interface IRobotBuddyActions
    {
        void OnRobotBuddyMove(InputAction.CallbackContext context);
        void OnRobotJump(InputAction.CallbackContext context);
        void OnRobotBuddyInteract(InputAction.CallbackContext context);
    }
}
